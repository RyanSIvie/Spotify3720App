{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashj\\\\Documents\\\\GitHub\\\\Spotify3720App\\\\frontend\\\\src\\\\pages\\\\Play.js\",\n  _s = $RefreshSig$();\nimport { Row, Col } from 'antd';\nimport { useState, useEffect } from \"react\";\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Track from '../components/Track';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nconst Play = () => {\n  _s();\n  const [top50Tracks, setTop50Tracks] = useState({\n    items: [{\n      name: \"\",\n      preview_url: \"\"\n    }]\n  });\n  const [id, setId] = useState(0);\n  useEffect(() => {\n    const token = window.localStorage.getItem(\"token\");\n    if (token) {\n      spotifyApi.setAccessToken(token);\n      spotifyApi.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 50\n      }).then(function (data) {\n        setTop50Tracks(data);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      span: 4,\n      offset: 10,\n      children: [/*#__PURE__*/_jsxDEV(Track, {\n        track: top50Tracks.items[id]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setId(id - 1),\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setId(id + 1),\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Play, \"aSBfbeayHo45/6JKOmEWLcS7vyY=\");\n_c = Play;\nexport default Play;\nvar _c;\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"names":["Row","Col","useState","useEffect","SpotifyWebApi","Track","jsxDEV","_jsxDEV","spotifyApi","Play","_s","top50Tracks","setTop50Tracks","items","name","preview_url","id","setId","token","window","localStorage","getItem","setAccessToken","getMyTopTracks","time_range","limit","then","data","children","span","offset","track","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yashj/Documents/GitHub/Spotify3720App/frontend/src/pages/Play.js"],"sourcesContent":["import { Row, Col} from 'antd';\r\nimport { useState, useEffect } from \"react\";\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport Track from '../components/Track';\r\n\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nconst Play = () => {\r\n    const [top50Tracks, setTop50Tracks] = useState({items: [{name: \"\", preview_url: \"\"}]});\r\n    const [id, setId] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        const token = window.localStorage.getItem(\"token\");\r\n        if (token) {\r\n            spotifyApi.setAccessToken(token);\r\n            \r\n            spotifyApi.getMyTopTracks({ time_range: \"long_term\", limit: 50 }).then(function (data) {\r\n        \r\n                setTop50Tracks(data);\r\n              });\r\n        }\r\n    }, []);\r\n    return (\r\n        <Row>\r\n            <Col span={4} offset={10}>\r\n                \r\n            \r\n        <Track track={top50Tracks.items[id]} />\r\n        <button onClick={() => setId(id-1)}>back</button>\r\n        <button onClick={() => setId(id+1)}>next</button>\r\n        \r\n            </Col>\r\n        </Row>\r\n    )\r\n  };\r\n  \r\n  export default Play;"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,GAAG,QAAO,MAAM;AAC9B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAG,IAAIJ,aAAa,EAAE;AAEtC,MAAMK,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC;IAACW,KAAK,EAAE,CAAC;MAACC,IAAI,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAC;EAAC,CAAC,CAAC;EACtF,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE/BC,SAAS,CAAC,MAAI;IACV,MAAMe,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAClD,IAAIH,KAAK,EAAE;MACPV,UAAU,CAACc,cAAc,CAACJ,KAAK,CAAC;MAEhCV,UAAU,CAACe,cAAc,CAAC;QAAEC,UAAU,EAAE,WAAW;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,IAAI,EAAE;QAEnFf,cAAc,CAACe,IAAI,CAAC;MACtB,CAAC,CAAC;IACR;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACIpB,OAAA,CAACP,GAAG;IAAA4B,QAAA,eACArB,OAAA,CAACN,GAAG;MAAC4B,IAAI,EAAE,CAAE;MAACC,MAAM,EAAE,EAAG;MAAAF,QAAA,gBAG7BrB,OAAA,CAACF,KAAK;QAAC0B,KAAK,EAAEpB,WAAW,CAACE,KAAK,CAACG,EAAE;MAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACvC5B,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAMnB,KAAK,CAACD,EAAE,GAAC,CAAC,CAAE;QAAAY,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACjD5B,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAMnB,KAAK,CAACD,EAAE,GAAC,CAAC,CAAE;QAAAY,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEvC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEZ,CAAC;AAACzB,EAAA,CA3BED,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AA6BR,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}